@model SportShop.Entities.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header" style="margin-top:20px">Quản lý sản phẩm</h1>
    </div>
    <!-- /.col-lg-12 -->
</div>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="control-label col-md-2"><span>Tên sản phẩm:</span></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><span>Danh mục:</span></div>
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><span>Loại sản phẩm:</span></div>
            <div class="col-md-10">
                @Html.DropDownList("TypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="control-label col-md-2"><span>Thương hiệu:</span></div>
            <div class="col-md-10">
                @Html.DropDownList("BrandID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><span>Màu sắc:</span></div>
            <div class="col-md-10">
                @Html.DropDownList("ColorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ColorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><span>Giảm giá:</span></div>
            <div class="col-md-10">
                @Html.DropDownList("SaleID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SaleID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><span>Size:</span></div>
            <div class="col-md-10">
                @Html.DropDownList("SizeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SizeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><span>Giá:</span></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><span>Mô tả:</span></div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2"><span>Sản phẩm mới:</span></div>
            <div class="col-md-10">
                    @Html.EditorFor(model => model.IsNew, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsNew, "", new { @class = "text-danger" })
  
            </div>
        </div>
        <div class="form-group">
            <div class="control-label col-md-2"><span>Avatar:</span></div>
            <div class="col-md-10">
                <div class="row" style="margin:0 0 10px 0;">
                    <a style="float:left;padding:3px 10px" class="btn btn-default" onclick="Click_BrowseServer();">Load</a>
                    @Html.HiddenFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                </div>
                <div class="row" style="margin-left:0">
                    <img id="imgPreview" class="img-thumbnail img-responsive" style="width:400px;height:auto" src="/images/no-image.png" />
                </div>
                    
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Tạo mới" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Quay lại", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
</div>
<script src="~/ckfinder/ckfinder.js"></script>
<script src="~/ckfinder/plugins/dummy/plugin.js"></script>
<script src="~/ckfinder/plugins/imageresize/plugin.js"></script>
<script src="~/ckfinder/plugins/fileeditor/plugin.js"></script>
<script type="text/javascript">
    function Click_BrowseServer() {
        var finder = new CKFinder();
        //finder.basePath = '../';
        finder.selectActionFunction = SetFileField;
        finder.popup();
    }
    function SetFileField(fileUrl) {
        $('#Avatar').val(fileUrl);
        $('#imgPreview').attr("src", fileUrl);
    }
</script>